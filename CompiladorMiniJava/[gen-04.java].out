.CODE
PUSH simple_heap_init
CALL
PUSH lblMetmain@Init
CALL
HALT

simple_heap_init: RET 0 ; Retorna inmediatamente

simple_malloc: LOADFP ; Inicialización unidad
LOADSP
STOREFP ; Finaliza inicialización del RA
LOADHL ; hl
DUP ; hl
PUSH 1 ; 1
ADD ; hl+1
STORE 4 ; Guarda el resultado (puntero a primera celda de memoria
LOAD 3 ; Carga la cantidad de celdas a alojar
ADD
STOREHL ; Mueve el heap limit (hl). Expande el heap
STOREFP
RET 1 ; Retorna eliminando el parámetro

.DATA
lblVTA: DW lblMetsetall@A
DW lblMetm1@A

.CODE
lblConstructor@A: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetsetall@A: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 4 ; Offset de variable en RA
LOAD 3 ; Cargo this
SWAP
STOREREF 1 ; Offset de variable en this
LOAD 3 ; Cargo this
LOADREF 1 ; Offset de variable en this
PUSH 2 ; Literal entero
MUL ; Multiplicacion
LOAD 3 ; Cargo this
SWAP
STOREREF 2 ; Offset de variable en this
.DATA
lblString1: DW "hola",0 ; Literal String
.CODE
PUSH lblString1
LOAD 3 ; Cargo this
SWAP
STOREREF 3 ; Offset de variable en this
FMEM 0
STOREFP ; Almacena el tope de la pila en el registro
RET 2

lblMetm1@A: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Cargo this
LOADREF 1 ; Offset de variable en this
PUSH lblMetdebugPrint@Object ; Cargo la etiqueta del metodo
CALL
LOAD 3 ; Cargo this
LOADREF 2 ; Offset de variable en this
PUSH lblMetdebugPrint@Object ; Cargo la etiqueta del metodo
CALL
LOAD 3 ; Cargo this
LOADREF 3 ; Offset de variable en this
PUSH lblMetprintSln@System ; Cargo la etiqueta del metodo
CALL
FMEM 0
STOREFP ; Almacena el tope de la pila en el registro
RET 1

.DATA
lblVTB: DW lblMetsetall@A
DW lblMetm1@A
DW lblMetseta4@B
DW lblMetm2@B

.CODE
lblConstructor@B: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetseta4@B: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
PUSH 4000 ; Literal entero
LOAD 3 ; Cargo this
SWAP
STOREREF 4 ; Offset de variable en this
PUSH 55 ; Literal entero
LOAD 3 ; Cargo this
SWAP
STOREREF 5 ; Offset de variable en this
FMEM 0
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetm2@B: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Cargo this
LOADREF 4 ; Offset de variable en this
PUSH lblMetdebugPrint@Object ; Cargo la etiqueta del metodo
CALL
LOAD 3 ; Cargo this
LOADREF 5 ; Offset de variable en this
PUSH lblMetdebugPrint@Object ; Cargo la etiqueta del metodo
CALL
FMEM 0
STOREFP ; Almacena el tope de la pila en el registro
RET 1

.DATA
lblVTInit: NOP

.CODE
lblConstructor@Init: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetmain@Init: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
RMEM 1 ; Reserva memoria para var local
RMEM 1 ; Reservo memoria para malloc
PUSH 6 ; Cantidad de atributos de instancia + this
PUSH simple_malloc
CALL
DUP ; Para no perder la referencia al nuevo CIR
PUSH lblVTB ; Direccion del cominezo de la VT de la clase
STOREREF 0 ; Guardamos la Referencia a la VT en el CIR que creamos
DUP
PUSH lblConstructor@B
CALL ; Llamo al constructor
STORE 0 ; Store var local x
LOAD 0 ; Offset de variable en RA
DUP ; Duplico this para no perderlo
LOADREF 0 ; Cargo la VT
LOADREF 2 ; Cargo la direccion de metodo
CALL
LOAD 0 ; Offset de variable en RA
PUSH 1234 ; Literal entero
SWAP
DUP ; Duplico this para no perderlo
LOADREF 0 ; Cargo la VT
LOADREF 0 ; Cargo la direccion de metodo
CALL
LOAD 0 ; Offset de variable en RA
DUP ; Duplico this para no perderlo
LOADREF 0 ; Cargo la VT
LOADREF 1 ; Cargo la direccion de metodo
CALL
LOAD 0 ; Offset de variable en RA
DUP ; Duplico this para no perderlo
LOADREF 0 ; Cargo la VT
LOADREF 3 ; Cargo la direccion de metodo
CALL
FMEM 1
STOREFP ; Almacena el tope de la pila en el registro
RET 0

.DATA
lblVTObject: NOP

.CODE
lblConstructor@Object: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetdebugPrint@Object: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
IPRINT ; Imprime el entero en el tope de la pila
STOREFP ; Almacena el tope de la pila en el registro
RET 1

.DATA
lblVTString: NOP

.CODE
lblConstructor@String: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

.DATA
lblVTSystem: NOP

.CODE
lblConstructor@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetread@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
READ ; Lee un valor entero
PUSH 48 ; Por ASCII
SUB
STORE 3 ; Devuelve el valor entero leído, poniendo el tope de la pila en la locación reservada
STOREFP ; Almacena el tope de la pila en el registro
RET 0

lblMetprintB@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
BPRINT ; Imprime el boolean en el tope de la pila
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintC@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
CPRINT ; Imprime el char en el tope de la pila
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintI@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
IPRINT ; Imprime el entero en el tope de la pila
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintS@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
SPRINT ; Imprime el string en el tope de la pila
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintln@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
PRNLN ; Imprime el caracter de nueva línea
STOREFP ; Almacena el tope de la pila en el registro
RET 0

lblMetprintBln@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
BPRINT ; Imprime el boolean en el tope de la pila
PRNLN ; Imprime el caracter de nueva línea
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintCln@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
CPRINT ; Imprime el char en el tope de la pila
PRNLN ; Imprime el caracter de nueva línea
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintIln@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
IPRINT ; Imprime el entero en el tope de la pila
PRNLN ; Imprime el caracter de nueva línea
STOREFP ; Almacena el tope de la pila en el registro
RET 1

lblMetprintSln@System: LOADFP ; Apila el valor del registro FP
LOADSP ; Apila el valor del registro FP
STOREFP ; Apila el valor del registro FP
LOAD 3 ; Apila el parámetro
SPRINT ; Imprime el string en el tope de la pila
PRNLN ; Imprime el caracter de nueva línea
STOREFP ; Almacena el tope de la pila en el registro
RET 1

